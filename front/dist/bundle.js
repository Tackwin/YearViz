!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=7)}([function(t,n,e){"use strict";e.r(n);var r="http://www.w3.org/1999/xhtml",i={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},o=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),i.hasOwnProperty(n)?{space:i[n],local:t}:t};var u=function(t){var n=o(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===r&&n.documentElement.namespaceURI===r?n.createElement(t):n.createElementNS(e,t)}})(n)};function a(){}var c=function(t){return null==t?a:function(){return this.querySelector(t)}};function s(){return[]}var l=function(t){return null==t?s:function(){return this.querySelectorAll(t)}},h=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var f=document.documentElement;if(!f.matches){var _=f.webkitMatchesSelector||f.msMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector;h=function(t){return function(){return _.call(this,t)}}}}var p=h,d=function(t){return new Array(t.length)};function y(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}y.prototype={constructor:y,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var g="$";function v(t,n,e,r,i,o){for(var u,a=0,c=n.length,s=o.length;a<s;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new y(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function m(t,n,e,r,i,o,u){var a,c,s,l={},h=n.length,f=o.length,_=new Array(h);for(a=0;a<h;++a)(c=n[a])&&(_[a]=s=g+u.call(c,c.__data__,a,n),s in l?i[a]=c:l[s]=c);for(a=0;a<f;++a)(c=l[s=g+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],l[s]=null):e[a]=new y(t,o[a]);for(a=0;a<h;++a)(c=n[a])&&l[_[a]]===c&&(i[a]=c)}function x(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var w=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function M(t,n){return t.style.getPropertyValue(n)||w(t).getComputedStyle(t,null).getPropertyValue(n)}function b(t){return t.trim().split(/^|\s+/)}function T(t){return t.classList||new k(t)}function k(t){this._node=t,this._names=b(t.getAttribute("class")||"")}function N(t,n){for(var e=T(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function A(t,n){for(var e=T(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}k.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function C(){this.textContent=""}function S(){this.innerHTML=""}function E(){this.nextSibling&&this.parentNode.appendChild(this)}function O(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function D(){return null}function P(){var t=this.parentNode;t&&t.removeChild(this)}function U(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function j(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var F={},I=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(F={mouseenter:"mouseover",mouseleave:"mouseout"}));function q(t,n,e){return t=Y(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Y(t,n,e){return function(r){var i=I;I=r;try{t.call(this,this.__data__,n,e)}finally{I=i}}}function L(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function R(t,n,e){var r=F.hasOwnProperty(t.type)?q:Y;return function(i,o,u){var a,c=this.__on,s=r(n,o,u);if(c)for(var l=0,h=c.length;l<h;++l)if((a=c[l]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=s,a.capture=e),void(a.value=n);this.addEventListener(t.type,s,e),a={type:t.type,name:t.name,value:n,listener:s,capture:e},c?c.push(a):this.__on=[a]}}function z(t,n,e,r){var i=I;t.sourceEvent=I,I=t;try{return n.apply(e,r)}finally{I=i}}function H(t,n,e){var r=w(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var B=[null];function X(t,n){this._groups=t,this._parents=n}function $(){return new X([[document.documentElement]],B)}X.prototype=$.prototype={constructor:X,select:function(t){"function"!=typeof t&&(t=c(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],s=a.length,l=r[i]=new Array(s),h=0;h<s;++h)(o=a[h])&&(u=t.call(o,o.__data__,h,a))&&("__data__"in o&&(u.__data__=o.__data__),l[h]=u);return new X(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=l(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,s=0;s<c;++s)(u=a[s])&&(r.push(t.call(u,u.__data__,s,a)),i.push(u));return new X(r,i)},filter:function(t){"function"!=typeof t&&(t=p(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],s=0;s<a;++s)(o=u[s])&&t.call(o,o.__data__,s,u)&&c.push(o);return new X(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),l=-1,this.each(function(t){p[++l]=t}),p;var e,r=n?m:v,i=this._parents,o=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var u=o.length,a=new Array(u),c=new Array(u),s=new Array(u),l=0;l<u;++l){var h=i[l],f=o[l],_=f.length,p=t.call(h,h&&h.__data__,l,i),d=p.length,y=c[l]=new Array(d),g=a[l]=new Array(d);r(h,f,y,g,s[l]=new Array(_),p,n);for(var x,w,M=0,b=0;M<d;++M)if(x=y[M]){for(M>=b&&(b=M+1);!(w=g[b])&&++b<d;);x._next=w||null}}return(a=new X(a,i))._enter=c,a._exit=s,a},enter:function(){return new X(this._enter||this._groups.map(d),this._parents)},exit:function(){return new X(this._exit||this._groups.map(d),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,s=n[a],l=e[a],h=s.length,f=u[a]=new Array(h),_=0;_<h;++_)(c=s[_]||l[_])&&(f[_]=c);for(;a<r;++a)u[a]=n[a];return new X(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=x);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,s=i[o]=new Array(c),l=0;l<c;++l)(u=a[l])&&(s[l]=u);s.sort(n)}return new X(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=o(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):M(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=b(t+"");if(arguments.length<2){for(var r=T(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?N:A)(this,t)}}:n?function(t){return function(){N(this,t)}}:function(t){return function(){A(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?C:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?S:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(E)},lower:function(){return this.each(O)},append:function(t){var n="function"==typeof t?t:u(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:u(t),r=null==n?D:"function"==typeof n?n:c(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(P)},clone:function(t){return this.select(t?j:U)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?R:L,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,s=0,l=a.length;s<l;++s)for(r=0,c=a[s];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return H(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return H(this,t,n)}})(t,n))}};var V=$,Z=function(t){return"string"==typeof t?new X([[document.querySelector(t)]],[document.documentElement]):new X([[t]],B)},Q=function(t){return Z(u(t).call(document.documentElement))},W=0;function J(){return new G}function G(){this._="@"+(++W).toString(36)}G.prototype=J.prototype={constructor:G,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var K=function(){for(var t,n=I;t=n.sourceEvent;)n=t;return n},tt=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},nt=function(t){var n=K();return n.changedTouches&&(n=n.changedTouches[0]),tt(t,n)},et=function(t){return"string"==typeof t?new X([document.querySelectorAll(t)],[document.documentElement]):new X([null==t?[]:t],B)},rt=function(t,n,e){arguments.length<3&&(e=n,n=K().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return tt(t,r);return null},it=function(t,n){null==n&&(n=K().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=tt(t,n[e]);return i};e.d(n,"create",function(){return Q}),e.d(n,"creator",function(){return u}),e.d(n,"local",function(){return J}),e.d(n,"matcher",function(){return p}),e.d(n,"mouse",function(){return nt}),e.d(n,"namespace",function(){return o}),e.d(n,"namespaces",function(){return i}),e.d(n,"clientPoint",function(){return tt}),e.d(n,"select",function(){return Z}),e.d(n,"selectAll",function(){return et}),e.d(n,"selection",function(){return V}),e.d(n,"selector",function(){return c}),e.d(n,"selectorAll",function(){return l}),e.d(n,"style",function(){return M}),e.d(n,"touch",function(){return rt}),e.d(n,"touches",function(){return it}),e.d(n,"window",function(){return w}),e.d(n,"event",function(){return I}),e.d(n,"customEvent",function(){return z})},function(t,n,e){"use strict";var r=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function i(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function o(){}var u="\\s*([+-]?\\d+)\\s*",a="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",c="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",s=/^#([0-9a-f]{3})$/,l=/^#([0-9a-f]{6})$/,h=new RegExp("^rgb\\("+[u,u,u]+"\\)$"),f=new RegExp("^rgb\\("+[c,c,c]+"\\)$"),_=new RegExp("^rgba\\("+[u,u,u,a]+"\\)$"),p=new RegExp("^rgba\\("+[c,c,c,a]+"\\)$"),d=new RegExp("^hsl\\("+[a,c,c]+"\\)$"),y=new RegExp("^hsla\\("+[a,c,c,a]+"\\)$"),g={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function v(t){var n;return t=(t+"").trim().toLowerCase(),(n=s.exec(t))?new b((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=l.exec(t))?m(parseInt(n[1],16)):(n=h.exec(t))?new b(n[1],n[2],n[3],1):(n=f.exec(t))?new b(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=_.exec(t))?x(n[1],n[2],n[3],n[4]):(n=p.exec(t))?x(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=d.exec(t))?T(n[1],n[2]/100,n[3]/100,1):(n=y.exec(t))?T(n[1],n[2]/100,n[3]/100,n[4]):g.hasOwnProperty(t)?m(g[t]):"transparent"===t?new b(NaN,NaN,NaN,0):null}function m(t){return new b(t>>16&255,t>>8&255,255&t,1)}function x(t,n,e,r){return r<=0&&(t=n=e=NaN),new b(t,n,e,r)}function w(t){return t instanceof o||(t=v(t)),t?new b((t=t.rgb()).r,t.g,t.b,t.opacity):new b}function M(t,n,e,r){return 1===arguments.length?w(t):new b(t,n,e,null==r?1:r)}function b(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function T(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new N(t,n,e,r)}function k(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof N)return new N(t.h,t.s,t.l,t.opacity);if(t instanceof o||(t=v(t)),!t)return new N;if(t instanceof N)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),u=Math.max(n,e,r),a=NaN,c=u-i,s=(u+i)/2;return c?(a=n===u?(e-r)/c+6*(e<r):e===u?(r-n)/c+2:(n-e)/c+4,c/=s<.5?u+i:2-u-i,a*=60):c=s>0&&s<1?0:a,new N(a,c,s,t.opacity)}(t):new N(t,n,e,null==r?1:r)}function N(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function A(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}r(o,v,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),r(b,M,i(o,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new b(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new b(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),r(N,k,i(o,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new N(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new N(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new b(A(t>=240?t-240:t+120,i,r),A(t,i,r),A(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var C=Math.PI/180,S=180/Math.PI,E=.96422,O=1,D=.82521,P=4/29,U=6/29,j=3*U*U,F=U*U*U;function I(t){if(t instanceof L)return new L(t.l,t.a,t.b,t.opacity);if(t instanceof Z){if(isNaN(t.h))return new L(t.l,0,0,t.opacity);var n=t.h*C;return new L(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof b||(t=w(t));var e,r,i=B(t.r),o=B(t.g),u=B(t.b),a=R((.2225045*i+.7168786*o+.0606169*u)/O);return i===o&&o===u?e=r=a:(e=R((.4360747*i+.3850649*o+.1430804*u)/E),r=R((.0139322*i+.0971045*o+.7141733*u)/D)),new L(116*a-16,500*(e-a),200*(a-r),t.opacity)}function q(t,n){return new L(t,0,0,null==n?1:n)}function Y(t,n,e,r){return 1===arguments.length?I(t):new L(t,n,e,null==r?1:r)}function L(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function R(t){return t>F?Math.pow(t,1/3):t/j+P}function z(t){return t>U?t*t*t:j*(t-P)}function H(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function B(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function X(t){if(t instanceof Z)return new Z(t.h,t.c,t.l,t.opacity);if(t instanceof L||(t=I(t)),0===t.a&&0===t.b)return new Z(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*S;return new Z(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function $(t,n,e,r){return 1===arguments.length?X(t):new Z(e,n,t,null==r?1:r)}function V(t,n,e,r){return 1===arguments.length?X(t):new Z(t,n,e,null==r?1:r)}function Z(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}r(L,Y,i(o,{brighter:function(t){return new L(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new L(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new b(H(3.1338561*(n=E*z(n))-1.6168667*(t=O*z(t))-.4906146*(e=D*z(e))),H(-.9787684*n+1.9161415*t+.033454*e),H(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),r(Z,V,i(o,{brighter:function(t){return new Z(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Z(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return I(this).rgb()}}));var Q=-.14861,W=1.78277,J=-.29227,G=-.90649,K=1.97294,tt=K*G,nt=K*W,et=W*J-G*Q;function rt(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof it)return new it(t.h,t.s,t.l,t.opacity);t instanceof b||(t=w(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(et*r+tt*n-nt*e)/(et+tt-nt),o=r-i,u=(K*(e-i)-J*o)/G,a=Math.sqrt(u*u+o*o)/(K*i*(1-i)),c=a?Math.atan2(u,o)*S-120:NaN;return new it(c<0?c+360:c,a,i,t.opacity)}(t):new it(t,n,e,null==r?1:r)}function it(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}r(it,rt,i(o,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new it(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new it(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*C,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new b(255*(n+e*(Q*r+W*i)),255*(n+e*(J*r+G*i)),255*(n+e*(K*r)),this.opacity)}})),e.d(n,"a",function(){return v}),e.d(n,"f",function(){return M}),e.d(n,"d",function(){return k}),e.d(n,"e",function(){return Y}),e.d(n,"c",function(){return V}),e.d(n,!1,function(){return $}),e.d(n,!1,function(){return q}),e.d(n,"b",function(){return rt})},function(t,n,e){"use strict";var r=e(1);function i(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}var o=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),o=t[r],u=t[r+1],a=r>0?t[r-1]:2*o-u,c=r<n-1?t[r+2]:2*u-o;return i((e-r/n)*n,a,o,u,c)}},u=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),o=t[(r+n-1)%n],u=t[r%n],a=t[(r+1)%n],c=t[(r+2)%n];return i((e-r/n)*n,o,u,a,c)}},a=function(t){return function(){return t}};function c(t,n){return function(e){return t+e*n}}function s(t,n){var e=n-t;return e?c(t,e>180||e<-180?e-360*Math.round(e/360):e):a(isNaN(t)?n:t)}function l(t){return 1==(t=+t)?h:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):a(isNaN(n)?e:n)}}function h(t,n){var e=n-t;return e?c(t,e):a(isNaN(t)?n:t)}var f=function t(n){var e=l(n);function i(t,n){var i=e((t=Object(r.f)(t)).r,(n=Object(r.f)(n)).r),o=e(t.g,n.g),u=e(t.b,n.b),a=h(t.opacity,n.opacity);return function(n){return t.r=i(n),t.g=o(n),t.b=u(n),t.opacity=a(n),t+""}}return i.gamma=t,i}(1);function _(t){return function(n){var e,i,o=n.length,u=new Array(o),a=new Array(o),c=new Array(o);for(e=0;e<o;++e)i=Object(r.f)(n[e]),u[e]=i.r||0,a[e]=i.g||0,c[e]=i.b||0;return u=t(u),a=t(a),c=t(c),i.opacity=1,function(t){return i.r=u(t),i.g=a(t),i.b=c(t),i+""}}}var p=_(o),d=_(u),y=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=A(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}},g=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},v=function(t,n){return n-=t=+t,function(e){return t+n*e}},m=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=A(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},x=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,w=new RegExp(x.source,"g");var M,b,T,k,N=function(t,n){var e,r,i,o=x.lastIndex=w.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=x.exec(t))&&(r=w.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:v(e,r)})),o=w.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},A=function(t,n){var e,i=typeof n;return null==n||"boolean"===i?a(n):("number"===i?v:"string"===i?(e=Object(r.a)(n))?(n=e,f):N:n instanceof r.a?f:n instanceof Date?g:Array.isArray(n)?y:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?m:v)(t,n)},C=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},S=180/Math.PI,E={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},O=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*S,skewX:Math.atan(c)*S,scaleX:u,scaleY:a}};function D(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],c=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:v(t,i)},{i:c-2,x:v(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:v(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:v(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,c),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:v(t,e)},{i:a-2,x:v(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,c),o=u=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var P=D(function(t){return"none"===t?E:(M||(M=document.createElement("DIV"),b=document.documentElement,T=document.defaultView),M.style.transform=t,t=T.getComputedStyle(b.appendChild(M),null).getPropertyValue("transform"),b.removeChild(M),t=t.slice(7,-1).split(","),O(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),U=D(function(t){return null==t?E:(k||(k=document.createElementNS("http://www.w3.org/2000/svg","g")),k.setAttribute("transform",t),(t=k.transform.baseVal.consolidate())?(t=t.matrix,O(t.a,t.b,t.c,t.d,t.e,t.f)):E)},", ",")",")"),j=Math.SQRT2;function F(t){return((t=Math.exp(t))+1/t)/2}var I=function(t,n){var e,r,i=t[0],o=t[1],u=t[2],a=n[0],c=n[1],s=n[2],l=a-i,h=c-o,f=l*l+h*h;if(f<1e-12)r=Math.log(s/u)/j,e=function(t){return[i+t*l,o+t*h,u*Math.exp(j*t*r)]};else{var _=Math.sqrt(f),p=(s*s-u*u+4*f)/(2*u*2*_),d=(s*s-u*u-4*f)/(2*s*2*_),y=Math.log(Math.sqrt(p*p+1)-p),g=Math.log(Math.sqrt(d*d+1)-d);r=(g-y)/j,e=function(t){var n,e=t*r,a=F(y),c=u/(2*_)*(a*(n=j*e+y,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(y));return[i+c*l,o+c*h,u*a/F(j*e+y)]}}return e.duration=1e3*r,e};function q(t){return function(n,e){var i=t((n=Object(r.d)(n)).h,(e=Object(r.d)(e)).h),o=h(n.s,e.s),u=h(n.l,e.l),a=h(n.opacity,e.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(t),n.opacity=a(t),n+""}}}var Y=q(s),L=q(h);function R(t,n){var e=h((t=Object(r.e)(t)).l,(n=Object(r.e)(n)).l),i=h(t.a,n.a),o=h(t.b,n.b),u=h(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=i(n),t.b=o(n),t.opacity=u(n),t+""}}function z(t){return function(n,e){var i=t((n=Object(r.c)(n)).h,(e=Object(r.c)(e)).h),o=h(n.c,e.c),u=h(n.l,e.l),a=h(n.opacity,e.opacity);return function(t){return n.h=i(t),n.c=o(t),n.l=u(t),n.opacity=a(t),n+""}}}var H=z(s),B=z(h);function X(t){return function n(e){function i(n,i){var o=t((n=Object(r.b)(n)).h,(i=Object(r.b)(i)).h),u=h(n.s,i.s),a=h(n.l,i.l),c=h(n.opacity,i.opacity);return function(t){return n.h=o(t),n.s=u(t),n.l=a(Math.pow(t,e)),n.opacity=c(t),n+""}}return e=+e,i.gamma=n,i}(1)}var $=X(s),V=X(h),Z=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e};e.d(n,"a",function(){return A}),e.d(n,!1,function(){return y}),e.d(n,!1,function(){return o}),e.d(n,!1,function(){return u}),e.d(n,!1,function(){return g}),e.d(n,"b",function(){return v}),e.d(n,!1,function(){return m}),e.d(n,"d",function(){return C}),e.d(n,"e",function(){return N}),e.d(n,"f",function(){return P}),e.d(n,"g",function(){return U}),e.d(n,!1,function(){return I}),e.d(n,"c",function(){return f}),e.d(n,!1,function(){return p}),e.d(n,!1,function(){return d}),e.d(n,!1,function(){return Y}),e.d(n,!1,function(){return L}),e.d(n,!1,function(){return R}),e.d(n,!1,function(){return H}),e.d(n,!1,function(){return B}),e.d(n,!1,function(){return $}),e.d(n,!1,function(){return V}),e.d(n,!1,function(){return Z})},function(t,n,e){"use strict";function r(t){return+t}function i(t){return t*t}function o(t){return t*(2-t)}function u(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function a(t){return t*t*t}function c(t){return--t*t*t+1}function s(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}e.r(n);var l=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),h=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),f=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),_=Math.PI,p=_/2;function d(t){return 1-Math.cos(t*p)}function y(t){return Math.sin(t*p)}function g(t){return(1-Math.cos(_*t))/2}function v(t){return Math.pow(2,10*t-10)}function m(t){return 1-Math.pow(2,-10*t)}function x(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function w(t){return 1-Math.sqrt(1-t*t)}function M(t){return Math.sqrt(1- --t*t)}function b(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var T=4/11,k=6/11,N=8/11,A=.75,C=9/11,S=10/11,E=.9375,O=21/22,D=63/64,P=1/T/T;function U(t){return 1-j(1-t)}function j(t){return(t=+t)<T?P*t*t:t<N?P*(t-=k)*t+A:t<S?P*(t-=C)*t+E:P*(t-=O)*t+D}function F(t){return((t*=2)<=1?1-j(1-t):j(t-1)+1)/2}var I=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),q=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Y=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),L=2*Math.PI,R=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=L);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*L)},i.period=function(e){return t(n,e)},i}(1,.3),z=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=L);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*L)},i.period=function(e){return t(n,e)},i}(1,.3),H=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=L);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*L)},i.period=function(e){return t(n,e)},i}(1,.3);e.d(n,"easeLinear",function(){return r}),e.d(n,"easeQuad",function(){return u}),e.d(n,"easeQuadIn",function(){return i}),e.d(n,"easeQuadOut",function(){return o}),e.d(n,"easeQuadInOut",function(){return u}),e.d(n,"easeCubic",function(){return s}),e.d(n,"easeCubicIn",function(){return a}),e.d(n,"easeCubicOut",function(){return c}),e.d(n,"easeCubicInOut",function(){return s}),e.d(n,"easePoly",function(){return f}),e.d(n,"easePolyIn",function(){return l}),e.d(n,"easePolyOut",function(){return h}),e.d(n,"easePolyInOut",function(){return f}),e.d(n,"easeSin",function(){return g}),e.d(n,"easeSinIn",function(){return d}),e.d(n,"easeSinOut",function(){return y}),e.d(n,"easeSinInOut",function(){return g}),e.d(n,"easeExp",function(){return x}),e.d(n,"easeExpIn",function(){return v}),e.d(n,"easeExpOut",function(){return m}),e.d(n,"easeExpInOut",function(){return x}),e.d(n,"easeCircle",function(){return b}),e.d(n,"easeCircleIn",function(){return w}),e.d(n,"easeCircleOut",function(){return M}),e.d(n,"easeCircleInOut",function(){return b}),e.d(n,"easeBounce",function(){return j}),e.d(n,"easeBounceIn",function(){return U}),e.d(n,"easeBounceOut",function(){return j}),e.d(n,"easeBounceInOut",function(){return F}),e.d(n,"easeBack",function(){return Y}),e.d(n,"easeBackIn",function(){return I}),e.d(n,"easeBackOut",function(){return q}),e.d(n,"easeBackInOut",function(){return Y}),e.d(n,"easeElastic",function(){return z}),e.d(n,"easeElasticIn",function(){return R}),e.d(n,"easeElasticOut",function(){return z}),e.d(n,"easeElasticInOut",function(){return H})},function(t,n,e){"use strict";e.r(n);var r=Array.prototype.slice,i=function(t){return t},o=1,u=2,a=3,c=4,s=1e-6;function l(t){return"translate("+(t+.5)+",0)"}function h(t){return"translate(0,"+(t+.5)+")"}function f(){return!this.__axis}function _(t,n){var e=[],_=null,p=null,d=6,y=6,g=3,v=t===o||t===c?-1:1,m=t===c||t===u?"x":"y",x=t===o||t===a?l:h;function w(r){var l=null==_?n.ticks?n.ticks.apply(n,e):n.domain():_,h=null==p?n.tickFormat?n.tickFormat.apply(n,e):i:p,w=Math.max(d,0)+g,M=n.range(),b=+M[0]+.5,T=+M[M.length-1]+.5,k=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),N=r.selection?r.selection():r,A=N.selectAll(".domain").data([null]),C=N.selectAll(".tick").data(l,n).order(),S=C.exit(),E=C.enter().append("g").attr("class","tick"),O=C.select("line"),D=C.select("text");A=A.merge(A.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),C=C.merge(E),O=O.merge(E.append("line").attr("stroke","#000").attr(m+"2",v*d)),D=D.merge(E.append("text").attr("fill","#000").attr(m,v*w).attr("dy",t===o?"0em":t===a?"0.71em":"0.32em")),r!==N&&(A=A.transition(r),C=C.transition(r),O=O.transition(r),D=D.transition(r),S=S.transition(r).attr("opacity",s).attr("transform",function(t){return isFinite(t=k(t))?x(t):this.getAttribute("transform")}),E.attr("opacity",s).attr("transform",function(t){var n=this.parentNode.__axis;return x(n&&isFinite(n=n(t))?n:k(t))})),S.remove(),A.attr("d",t===c||t==u?"M"+v*y+","+b+"H0.5V"+T+"H"+v*y:"M"+b+","+v*y+"V0.5H"+T+"V"+v*y),C.attr("opacity",1).attr("transform",function(t){return x(k(t))}),O.attr(m+"2",v*d),D.attr(m,v*w).text(h),N.filter(f).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===u?"start":t===c?"end":"middle"),N.each(function(){this.__axis=k})}return w.scale=function(t){return arguments.length?(n=t,w):n},w.ticks=function(){return e=r.call(arguments),w},w.tickArguments=function(t){return arguments.length?(e=null==t?[]:r.call(t),w):e.slice()},w.tickValues=function(t){return arguments.length?(_=null==t?null:r.call(t),w):_&&_.slice()},w.tickFormat=function(t){return arguments.length?(p=t,w):p},w.tickSize=function(t){return arguments.length?(d=y=+t,w):d},w.tickSizeInner=function(t){return arguments.length?(d=+t,w):d},w.tickSizeOuter=function(t){return arguments.length?(y=+t,w):y},w.tickPadding=function(t){return arguments.length?(g=+t,w):g},w}function p(t){return _(o,t)}function d(t){return _(u,t)}function y(t){return _(a,t)}function g(t){return _(c,t)}e.d(n,"axisTop",function(){return p}),e.d(n,"axisRight",function(){return d}),e.d(n,"axisBottom",function(){return y}),e.d(n,"axisLeft",function(){return g})},function(t,n,e){"use strict";e.r(n);var r=e(0),i={value:function(){}};function o(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new u(r)}function u(t){this._=t}function a(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function c(t,n,e){for(var r=0,o=t.length;r<o;++r)if(t[r].name===n){t[r]=i,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}u.prototype=o.prototype={constructor:u,on:function(t,n){var e,r,i=this._,o=(r=i,(t+"").trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}})),u=-1,s=o.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++u<s;)if(e=(t=o[u]).type)i[e]=c(i[e],t.name,n);else if(null==n)for(e in i)i[e]=c(i[e],t.name,null);return this}for(;++u<s;)if((e=(t=o[u]).type)&&(e=a(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new u(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var s,l,h=o,f=0,_=0,p=0,d=1e3,y=0,g=0,v=0,m="object"==typeof performance&&performance.now?performance:Date,x="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function w(){return g||(x(M),g=m.now()+v)}function M(){g=0}function b(){this._call=this._time=this._next=null}function T(t,n,e){var r=new b;return r.restart(t,n,e),r}function k(){g=(y=m.now())+v,f=_=0;try{!function(){w(),++f;for(var t,n=s;n;)(t=g-n._time)>=0&&n._call.call(null,t),n=n._next;--f}()}finally{f=0,function(){var t,n,e=s,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:s=n);l=t,A(r)}(),g=0}}function N(){var t=m.now(),n=t-y;n>d&&(v-=n,y=t)}function A(t){f||(_&&(_=clearTimeout(_)),t-g>24?(t<1/0&&(_=setTimeout(k,t-m.now()-v)),p&&(p=clearInterval(p))):(p||(y=m.now(),p=setInterval(N,d)),f=1,x(k)))}b.prototype=T.prototype={constructor:b,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?w():+e)+(null==n?0:+n),this._next||l===this||(l?l._next=this:s=this,l=this),this._call=t,this._time=e,A()},stop:function(){this._call&&(this._call=null,this._time=1/0,A())}};var C=function(t,n,e){var r=new b;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},S=h("start","end","interrupt"),E=[],O=0,D=1,P=2,U=3,j=4,F=5,I=6,q=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var s,l,h,f;if(e.state!==D)return a();for(s in i)if((f=i[s]).name===e.name){if(f.state===U)return C(o);f.state===j?(f.state=I,f.timer.stop(),f.on.call("interrupt",t,t.__data__,f.index,f.group),delete i[s]):+s<n&&(f.state=I,f.timer.stop(),delete i[s])}if(C(function(){e.state===U&&(e.state=j,e.timer.restart(u,e.delay,e.time),u(c))}),e.state=P,e.on.call("start",t,t.__data__,e.index,e.group),e.state===P){for(e.state=U,r=new Array(h=e.tween.length),s=0,l=-1;s<h;++s)(f=e.tween[s].value.call(t,t.__data__,e.index,e.group))&&(r[++l]=f);r.length=l+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=F,1),o=-1,u=r.length;++o<u;)r[o].call(null,i);e.state===F&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=I,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=T(function(t){e.state=D,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:S,tween:E,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:O})};function Y(t,n){var e=R(t,n);if(e.state>O)throw new Error("too late; already scheduled");return e}function L(t,n){var e=R(t,n);if(e.state>P)throw new Error("too late; already started");return e}function R(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var z=function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>P&&e.state<F,e.state=I,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}},H=e(2);function B(t,n,e){var r=t._id;return t.each(function(){var t=L(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return R(t,r).value[n]}}var X=e(1),$=function(t,n){var e;return("number"==typeof n?H.b:n instanceof X.a?H.c:(e=Object(X.a)(n))?(n=e,H.c):H.e)(t,n)};var V=r.selection.prototype.constructor;var Z=0;function Q(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function W(t){return Object(r.selection)().transition(t)}function J(){return++Z}var G=r.selection.prototype;Q.prototype=W.prototype={constructor:Q,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Object(r.selector)(t));for(var i=this._groups,o=i.length,u=new Array(o),a=0;a<o;++a)for(var c,s,l=i[a],h=l.length,f=u[a]=new Array(h),_=0;_<h;++_)(c=l[_])&&(s=t.call(c,c.__data__,_,l))&&("__data__"in c&&(s.__data__=c.__data__),f[_]=s,q(f[_],n,e,_,f,R(c,e)));return new Q(u,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Object(r.selectorAll)(t));for(var i=this._groups,o=i.length,u=[],a=[],c=0;c<o;++c)for(var s,l=i[c],h=l.length,f=0;f<h;++f)if(s=l[f]){for(var _,p=t.call(s,s.__data__,f,l),d=R(s,e),y=0,g=p.length;y<g;++y)(_=p[y])&&q(_,n,e,y,p,d);u.push(p),a.push(s)}return new Q(u,a,n,e)},filter:function(t){"function"!=typeof t&&(t=Object(r.matcher)(t));for(var n=this._groups,e=n.length,i=new Array(e),o=0;o<e;++o)for(var u,a=n[o],c=a.length,s=i[o]=[],l=0;l<c;++l)(u=a[l])&&t.call(u,u.__data__,l,a)&&s.push(u);return new Q(i,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,s=n[a],l=e[a],h=s.length,f=u[a]=new Array(h),_=0;_<h;++_)(c=s[_]||l[_])&&(f[_]=c);for(;a<r;++a)u[a]=n[a];return new Q(u,this._parents,this._name,this._id)},selection:function(){return new V(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=J(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,s=0;s<c;++s)if(u=a[s]){var l=R(u,n);q(u,t,e,s,a,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new Q(r,this._parents,t,e)},call:G.call,nodes:G.nodes,node:G.node,size:G.size,empty:G.empty,each:G.each,on:function(t,n){var e=this._id;return arguments.length<2?R(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?Y:L;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=Object(r.namespace)(t),i="transform"===e?H.g:$;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttributeNS(t.space,t.local))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttribute(t))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttribute(t)}})(e,i,B(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,i,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var i=Object(r.namespace)(t);return this.tween(e,(i.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(i,n))},style:function(t,n,e){var i="transform"==(t+="")?H.f:$;return null==n?this.styleTween(t,function(t,n){var e,i,o;return function(){var u=Object(r.style)(this,t),a=(this.style.removeProperty(t),Object(r.style)(this,t));return u===a?null:u===e&&a===i?o:o=n(e=u,i=a)}}(t,i)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var i,o,u;return function(){var a=Object(r.style)(this,t),c=e(this);return null==c&&(this.style.removeProperty(t),c=Object(r.style)(this,t)),a===c?null:a===i&&c===o?u:u=n(i=a,o=c)}}(t,i,B(this,"style."+t,n)):function(t,n,e){var i,o;return function(){var u=Object(r.style)(this,t);return u===e?null:u===i?o:o=n(i=u,e)}}(t,i,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(B(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=R(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=L(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=L(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,s=i.length;c<s;++c)if(i[c].name===n){i[c]=a;break}c===s&&i.push(a)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Y(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Y(this,t).delay=n}})(n,t)):R(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){L(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){L(this,t).duration=n}})(n,t)):R(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){L(this,t).ease=n}}(n,t)):R(this.node(),n).ease}};var K={time:null,delay:0,duration:250,ease:e(3).easeCubicInOut};function tt(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return K.time=w(),K;return e}r.selection.prototype.interrupt=function(t){return this.each(function(){z(this,t)})},r.selection.prototype.transition=function(t){var n,e;t instanceof Q?(n=t._id,t=t._name):(n=J(),(e=K).time=w(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,s=0;s<c;++s)(u=a[s])&&q(u,t,n,s,a,e||tt(u,n));return new Q(r,this._parents,t,n)};var nt=[null],et=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>D&&e.name===n)return new Q([[t]],nt,n,+r);return null};e.d(n,"transition",function(){return W}),e.d(n,"active",function(){return et}),e.d(n,"interrupt",function(){return z})},function(t,n,e){"use strict";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return r(n(t),e)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var o=i(r),u=o.right,a=(o.left,u);var c=function(t){return null===t?NaN:+t},s=Array.prototype,l=(s.slice,s.map,function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o}),h=Math.sqrt(50),f=Math.sqrt(10),_=Math.sqrt(2),p=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=d(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function d(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=h?10:o>=f?5:o>=_?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=h?10:o>=f?5:o>=_?2:1)}function y(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=h?i*=10:o>=f?i*=5:o>=_&&(i*=2),n<t?-i:i}var g=function(t,n,e){if(null==e&&(e=c),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),u=+e(t[o],o,t);return u+(+e(t[o+1],o+1,t)-u)*(i-o)}};function v(){}function m(t,n){var e=new v;if(t instanceof v)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}v.prototype=m.prototype={constructor:v,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var x=m;function w(){}var M=x.prototype;function b(t,n){var e=new w;if(t instanceof w)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}w.prototype=b.prototype={constructor:w,has:M.has,add:function(t){return this["$"+(t+="")]=t,this},remove:M.remove,clear:M.clear,values:M.keys,size:M.size,empty:M.empty,each:M.each};var T=Array.prototype,k=T.map,N=T.slice,A={name:"implicit"};function C(t){var n=x(),e=[],r=A;function i(i){var o=i+"",u=n.get(o);if(!u){if(r!==A)return r;n.set(o,u=e.push(i))}return t[(u-1)%t.length]}return t=null==t?[]:N.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=x();for(var r,o,u=-1,a=t.length;++u<a;)n.has(o=(r=t[u])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=N.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return C().domain(e).range(t).unknown(r)},i}function S(){var t,n,e=C().unknown(void 0),r=e.domain,i=e.range,o=[0,1],u=!1,a=0,c=0,s=.5;function h(){var e=r().length,h=o[1]<o[0],f=o[h-0],_=o[1-h];t=(_-f)/Math.max(1,e-a+2*c),u&&(t=Math.floor(t)),f+=(_-f-t*(e-a))*s,n=t*(1-a),u&&(f=Math.round(f),n=Math.round(n));var p=l(e).map(function(n){return f+t*n});return i(h?p.reverse():p)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),h()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],h()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],u=!0,h()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(u=!!t,h()):u},e.padding=function(t){return arguments.length?(a=c=Math.max(0,Math.min(1,t)),h()):a},e.paddingInner=function(t){return arguments.length?(a=Math.max(0,Math.min(1,t)),h()):a},e.paddingOuter=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),h()):c},e.align=function(t){return arguments.length?(s=Math.max(0,Math.min(1,t)),h()):s},e.copy=function(){return S().domain(r()).range(o).round(u).paddingInner(a).paddingOuter(c).align(s)},h()}function E(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(S().paddingInner(1))}var O=e(2),D=function(t){return function(){return t}},P=function(t){return+t},U=[0,1];function j(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:D(n)}function F(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function I(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),c=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++c<i;)o[c]=e(t[c],t[c+1]),u[c]=r(n[c],n[c+1]);return function(n){var e=a(t,n,1,i)-1;return u[e](o[e](n))}}function q(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function Y(t,n){var e,r,i,o=U,u=U,a=O.a,c=!1;function s(){return e=Math.min(o.length,u.length)>2?I:F,r=i=null,l}function l(n){return(r||(r=e(o,u,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return l.invert=function(t){return(i||(i=e(u,o,j,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},l.domain=function(t){return arguments.length?(o=k.call(t,P),s()):o.slice()},l.range=function(t){return arguments.length?(u=N.call(t),s()):u.slice()},l.rangeRound=function(t){return u=N.call(t),a=O.d,s()},l.clamp=function(t){return arguments.length?(c=!!t,s()):c},l.interpolate=function(t){return arguments.length?(a=t,s()):a},s()}var L,R=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},z=function(t){return(t=R(Math.abs(t)))?t[1]:NaN},H=function(t,n){var e=R(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},B={"":function(t,n){t=t.toPrecision(n);t:for(var e,r=t.length,i=1,o=-1;i<r;++i)switch(t[i]){case".":o=e=i;break;case"0":0===o&&(o=i),e=i;break;case"e":break t;default:o>0&&(o=0)}return o>0?t.slice(0,o)+t.slice(e+1):t},"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return H(100*t,n)},r:H,s:function(t,n){var e=R(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(L=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+R(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},X=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function $(t){return new V(t)}function V(t){if(!(n=X.exec(t)))throw new Error("invalid format: "+t);var n,e=n[1]||" ",r=n[2]||">",i=n[3]||"-",o=n[4]||"",u=!!n[5],a=n[6]&&+n[6],c=!!n[7],s=n[8]&&+n[8].slice(1),l=n[9]||"";"n"===l?(c=!0,l="g"):B[l]||(l=""),(u||"0"===e&&"="===r)&&(u=!0,e="0",r="="),this.fill=e,this.align=r,this.sign=i,this.symbol=o,this.zero=u,this.width=a,this.comma=c,this.precision=s,this.type=l}$.prototype=V.prototype,V.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var Z,Q,W,J=function(t){return t},G=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];Z=function(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,o=[],u=0,a=n[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(t.substring(i-=a,i+a)),!((c+=a+1)>r));)a=n[u=(u+1)%n.length];return o.reverse().join(e)}):J,i=t.currency,o=t.decimal,u=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):J,a=t.percent||"%";function c(t){var n=(t=$(t)).fill,e=t.align,c=t.sign,s=t.symbol,l=t.zero,h=t.width,f=t.comma,_=t.precision,p=t.type,d="$"===s?i[0]:"#"===s&&/[boxX]/.test(p)?"0"+p.toLowerCase():"",y="$"===s?i[1]:/[%p]/.test(p)?a:"",g=B[p],v=!p||/[defgprs%]/.test(p);function m(t){var i,a,s,m=d,x=y;if("c"===p)x=g(t)+x,t="";else{var w=(t=+t)<0;if(t=g(Math.abs(t),_),w&&0==+t&&(w=!1),m=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+m,x=("s"===p?G[8+L/3]:"")+x+(w&&"("===c?")":""),v)for(i=-1,a=t.length;++i<a;)if(48>(s=t.charCodeAt(i))||s>57){x=(46===s?o+t.slice(i+1):t.slice(i))+x,t=t.slice(0,i);break}}f&&!l&&(t=r(t,1/0));var M=m.length+t.length+x.length,b=M<h?new Array(h-M+1).join(n):"";switch(f&&l&&(t=r(b+t,b.length?h-x.length:1/0),b=""),e){case"<":t=m+t+x+b;break;case"=":t=m+b+t+x;break;case"^":t=b.slice(0,M=b.length>>1)+m+t+x+b.slice(M);break;default:t=b+m+t+x}return u(t)}return _=null==_?p?6:12:/[gprs]/.test(p)?Math.max(1,Math.min(21,_)):Math.max(0,Math.min(20,_)),m.toString=function(){return t+""},m}return{format:c,formatPrefix:function(t,n){var e=c(((t=$(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(z(n)/3))),i=Math.pow(10,-r),o=G[8+r/3];return function(t){return e(i*t)+o}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),Q=Z.format,W=Z.formatPrefix;var K=function(t,n,e){var r,i=t[0],o=t[t.length-1],u=y(i,o,null==n?10:n);switch((e=$(null==e?",f":e)).type){case"s":var a=Math.max(Math.abs(i),Math.abs(o));return null!=e.precision||isNaN(r=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(z(n)/3)))-z(Math.abs(t)))}(u,a))||(e.precision=r),W(e,a);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,z(n)-z(t))+1}(u,Math.max(Math.abs(i),Math.abs(o))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=function(t){return Math.max(0,-z(Math.abs(t)))}(u))||(e.precision=r-2*("%"===e.type))}return Q(e)};function tt(t){var n=t.domain;return t.ticks=function(t){var e=n();return p(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return K(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,u=i.length-1,a=i[o],c=i[u];return c<a&&(r=a,a=c,c=r,r=o,o=u,u=r),(r=d(a,c,e))>0?r=d(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=d(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(a/r)*r,i[u]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(a*r)/r,i[u]=Math.floor(c*r)/r,n(i)),t},t}function nt(){var t=Y(j,O.b);return t.copy=function(){return q(t,nt())},tt(t)}function et(){var t=[0,1];function n(t){return+t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=k.call(e,P),n):t.slice()},n.copy=function(){return et().domain(t)},tt(n)}var rt=function(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t};function it(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:D(n)}function ot(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function ut(t){return isFinite(t)?+("1e"+t):t<0?0:t}function at(t){return 10===t?ut:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function ct(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function st(t){return function(n){return-t(-n)}}function lt(){var t=Y(it,ot).domain([1,10]),n=t.domain,e=10,r=ct(10),i=at(10);function o(){return r=ct(e),i=at(e),n()[0]<0&&(r=st(r),i=st(i)),t}return t.base=function(t){return arguments.length?(e=+t,o()):e},t.domain=function(t){return arguments.length?(n(t),o()):n()},t.ticks=function(t){var o,u=n(),a=u[0],c=u[u.length-1];(o=c<a)&&(f=a,a=c,c=f);var s,l,h,f=r(a),_=r(c),d=null==t?10:+t,y=[];if(!(e%1)&&_-f<d){if(f=Math.round(f)-1,_=Math.round(_)+1,a>0){for(;f<_;++f)for(l=1,s=i(f);l<e;++l)if(!((h=s*l)<a)){if(h>c)break;y.push(h)}}else for(;f<_;++f)for(l=e-1,s=i(f);l>=1;--l)if(!((h=s*l)<a)){if(h>c)break;y.push(h)}}else y=p(f,_,Math.min(_-f,d)).map(i);return o?y.reverse():y},t.tickFormat=function(n,o){if(null==o&&(o=10===e?".0e":","),"function"!=typeof o&&(o=Q(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=u?o(t):""}},t.nice=function(){return n(rt(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return q(t,lt().base(e))},t}function ht(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function ft(){var t=1,n=Y(function(n,e){return(e=ht(e,t)-(n=ht(n,t)))?function(r){return(ht(r,t)-n)/e}:D(e)},function(n,e){return e=ht(e,t)-(n=ht(n,t)),function(r){return ht(n+e*r,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return q(n,ft().exponent(t))},tt(n)}function _t(){return ft().exponent(.5)}function pt(){var t=[],n=[],e=[];function i(){var r=0,i=Math.max(1,n.length);for(e=new Array(i-1);++r<i;)e[r-1]=g(t,r/i);return o}function o(t){if(!isNaN(t=+t))return n[a(e,t)]}return o.invertExtent=function(r){var i=n.indexOf(r);return i<0?[NaN,NaN]:[i>0?e[i-1]:t[0],i<e.length?e[i]:t[t.length-1]]},o.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var e,o=0,u=n.length;o<u;++o)null==(e=n[o])||isNaN(e=+e)||t.push(e);return t.sort(r),i()},o.range=function(t){return arguments.length?(n=N.call(t),i()):n.slice()},o.quantiles=function(){return e.slice()},o.copy=function(){return pt().domain(t).range(n)},o}function dt(){var t=0,n=1,e=1,r=[.5],i=[0,1];function o(t){if(t<=t)return i[a(r,t,0,e)]}function u(){var i=-1;for(r=new Array(e);++i<e;)r[i]=((i+1)*n-(i-e)*t)/(e+1);return o}return o.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],u()):[t,n]},o.range=function(t){return arguments.length?(e=(i=N.call(t)).length-1,u()):i.slice()},o.invertExtent=function(o){var u=i.indexOf(o);return u<0?[NaN,NaN]:u<1?[t,r[0]]:u>=e?[r[e-1],n]:[r[u-1],r[u]]},o.copy=function(){return dt().domain([t,n]).range(i)},tt(o)}function yt(){var t=[.5],n=[0,1],e=1;function r(r){if(r<=r)return n[a(t,r,0,e)]}return r.domain=function(i){return arguments.length?(t=N.call(i),e=Math.min(t.length,n.length-1),r):t.slice()},r.range=function(i){return arguments.length?(n=N.call(i),e=Math.min(t.length,n.length-1),r):n.slice()},r.invertExtent=function(e){var r=n.indexOf(e);return[t[r-1],t[r]]},r.copy=function(){return yt().domain(t).range(n)},r}var gt=new Date,vt=new Date;function mt(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return mt(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return gt.setTime(+n),vt.setTime(+r),t(gt),t(vt),Math.floor(e(gt,vt))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var xt=mt(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});xt.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?mt(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):xt:null};var wt=xt,Mt=(xt.range,6e4),bt=6048e5,Tt=mt(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),kt=Tt,Nt=(Tt.range,mt(function(t){t.setTime(Math.floor(t/Mt)*Mt)},function(t,n){t.setTime(+t+n*Mt)},function(t,n){return(n-t)/Mt},function(t){return t.getMinutes()})),At=Nt,Ct=(Nt.range,mt(function(t){var n=t.getTimezoneOffset()*Mt%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()})),St=Ct,Et=(Ct.range,mt(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Mt)/864e5},function(t){return t.getDate()-1})),Ot=Et;Et.range;function Dt(t){return mt(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Mt)/bt})}var Pt=Dt(0),Ut=Dt(1),jt=Dt(2),Ft=Dt(3),It=Dt(4),qt=Dt(5),Yt=Dt(6),Lt=(Pt.range,Ut.range,jt.range,Ft.range,It.range,qt.range,Yt.range,mt(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()})),Rt=Lt,zt=(Lt.range,mt(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));zt.every=function(t){return isFinite(t=Math.floor(t))&&t>0?mt(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Ht=zt,Bt=(zt.range,mt(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*Mt)},function(t,n){return(n-t)/Mt},function(t){return t.getUTCMinutes()})),Xt=Bt,$t=(Bt.range,mt(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()})),Vt=$t,Zt=($t.range,mt(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1})),Qt=Zt;Zt.range;function Wt(t){return mt(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/bt})}var Jt=Wt(0),Gt=Wt(1),Kt=Wt(2),tn=Wt(3),nn=Wt(4),en=Wt(5),rn=Wt(6),on=(Jt.range,Gt.range,Kt.range,tn.range,nn.range,en.range,rn.range,mt(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()})),un=on,an=(on.range,mt(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));an.every=function(t){return isFinite(t=Math.floor(t))&&t>0?mt(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var cn=an;an.range;function sn(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function ln(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function hn(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var fn,_n,pn,dn,yn={"-":"",_:" ",0:"0"},gn=/^\s*\d+/,vn=/^%/,mn=/[\\^$*+?|[\]().{}]/g;function xn(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function wn(t){return t.replace(mn,"\\$&")}function Mn(t){return new RegExp("^(?:"+t.map(wn).join("|")+")","i")}function bn(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Tn(t,n,e){var r=gn.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function kn(t,n,e){var r=gn.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Nn(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function An(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Cn(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Sn(t,n,e){var r=gn.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function En(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function On(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Dn(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Pn(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Un(t,n,e){var r=gn.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function jn(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Fn(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function In(t,n,e){var r=gn.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function qn(t,n,e){var r=gn.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Yn(t,n,e){var r=gn.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Ln(t,n,e){var r=vn.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Rn(t,n,e){var r=gn.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function zn(t,n,e){var r=gn.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function Hn(t,n){return xn(t.getDate(),n,2)}function Bn(t,n){return xn(t.getHours(),n,2)}function Xn(t,n){return xn(t.getHours()%12||12,n,2)}function $n(t,n){return xn(1+Ot.count(Ht(t),t),n,3)}function Vn(t,n){return xn(t.getMilliseconds(),n,3)}function Zn(t,n){return Vn(t,n)+"000"}function Qn(t,n){return xn(t.getMonth()+1,n,2)}function Wn(t,n){return xn(t.getMinutes(),n,2)}function Jn(t,n){return xn(t.getSeconds(),n,2)}function Gn(t){var n=t.getDay();return 0===n?7:n}function Kn(t,n){return xn(Pt.count(Ht(t),t),n,2)}function te(t,n){var e=t.getDay();return t=e>=4||0===e?It(t):It.ceil(t),xn(It.count(Ht(t),t)+(4===Ht(t).getDay()),n,2)}function ne(t){return t.getDay()}function ee(t,n){return xn(Ut.count(Ht(t),t),n,2)}function re(t,n){return xn(t.getFullYear()%100,n,2)}function ie(t,n){return xn(t.getFullYear()%1e4,n,4)}function oe(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+xn(n/60|0,"0",2)+xn(n%60,"0",2)}function ue(t,n){return xn(t.getUTCDate(),n,2)}function ae(t,n){return xn(t.getUTCHours(),n,2)}function ce(t,n){return xn(t.getUTCHours()%12||12,n,2)}function se(t,n){return xn(1+Qt.count(cn(t),t),n,3)}function le(t,n){return xn(t.getUTCMilliseconds(),n,3)}function he(t,n){return le(t,n)+"000"}function fe(t,n){return xn(t.getUTCMonth()+1,n,2)}function _e(t,n){return xn(t.getUTCMinutes(),n,2)}function pe(t,n){return xn(t.getUTCSeconds(),n,2)}function de(t){var n=t.getUTCDay();return 0===n?7:n}function ye(t,n){return xn(Jt.count(cn(t),t),n,2)}function ge(t,n){var e=t.getUTCDay();return t=e>=4||0===e?nn(t):nn.ceil(t),xn(nn.count(cn(t),t)+(4===cn(t).getUTCDay()),n,2)}function ve(t){return t.getUTCDay()}function me(t,n){return xn(Gt.count(cn(t),t),n,2)}function xe(t,n){return xn(t.getUTCFullYear()%100,n,2)}function we(t,n){return xn(t.getUTCFullYear()%1e4,n,4)}function Me(){return"+0000"}function be(){return"%"}function Te(t){return+t}function ke(t){return Math.floor(+t/1e3)}!function(t){fn=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,s=Mn(i),l=bn(i),h=Mn(o),f=bn(o),_=Mn(u),p=bn(u),d=Mn(a),y=bn(a),g=Mn(c),v=bn(c),m={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:Hn,e:Hn,f:Zn,H:Bn,I:Xn,j:$n,L:Vn,m:Qn,M:Wn,p:function(t){return i[+(t.getHours()>=12)]},Q:Te,s:ke,S:Jn,u:Gn,U:Kn,V:te,w:ne,W:ee,x:null,X:null,y:re,Y:ie,Z:oe,"%":be},x={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:ue,e:ue,f:he,H:ae,I:ce,j:se,L:le,m:fe,M:_e,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:Te,s:ke,S:pe,u:de,U:ye,V:ge,w:ve,W:me,x:null,X:null,y:xe,Y:we,Z:Me,"%":be},w={a:function(t,n,e){var r=_.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=h.exec(n.slice(e));return r?(t.w=f[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=v[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.m=y[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return T(t,n,e,r)},d:Pn,e:Pn,f:Yn,H:jn,I:jn,j:Un,L:qn,m:Dn,M:Fn,p:function(t,n,e){var r=s.exec(n.slice(e));return r?(t.p=l[r[0].toLowerCase()],e+r[0].length):-1},Q:Rn,s:zn,S:In,u:kn,U:Nn,V:An,w:Tn,W:Cn,x:function(t,n,r){return T(t,e,n,r)},X:function(t,n,e){return T(t,r,n,e)},y:En,Y:Sn,Z:On,"%":Ln};function M(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,s=t.length;for(e instanceof Date||(e=new Date(+e));++a<s;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=yn[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function b(t,n){return function(e){var r,i,o=hn(1900);if(T(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(r=(i=(r=ln(hn(o.y))).getUTCDay())>4||0===i?Gt.ceil(r):Gt(r),r=Qt.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(r=(i=(r=n(hn(o.y))).getDay())>4||0===i?Ut.ceil(r):Ut(r),r=Ot.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?ln(hn(o.y)).getUTCDay():n(hn(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,ln(o)):n(o)}}function T(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=w[i in yn?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return m.x=M(e,m),m.X=M(r,m),m.c=M(n,m),x.x=M(e,x),x.X=M(r,x),x.c=M(n,x),{format:function(t){var n=M(t+="",m);return n.toString=function(){return t},n},parse:function(t){var n=b(t+="",sn);return n.toString=function(){return t},n},utcFormat:function(t){var n=M(t+="",x);return n.toString=function(){return t},n},utcParse:function(t){var n=b(t,ln);return n.toString=function(){return t},n}}}(t),_n=fn.format,fn.parse,pn=fn.utcFormat,dn=fn.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||pn("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||dn("%Y-%m-%dT%H:%M:%S.%LZ");var Ne=1e3,Ae=60*Ne,Ce=60*Ae,Se=24*Ce,Ee=7*Se,Oe=30*Se,De=365*Se;function Pe(t){return new Date(t)}function Ue(t){return t instanceof Date?+t:+new Date(+t)}function je(t,n,e,r,o,u,a,c,s){var l=Y(j,O.b),h=l.invert,f=l.domain,_=s(".%L"),p=s(":%S"),d=s("%I:%M"),g=s("%I %p"),v=s("%a %d"),m=s("%b %d"),x=s("%B"),w=s("%Y"),M=[[a,1,Ne],[a,5,5*Ne],[a,15,15*Ne],[a,30,30*Ne],[u,1,Ae],[u,5,5*Ae],[u,15,15*Ae],[u,30,30*Ae],[o,1,Ce],[o,3,3*Ce],[o,6,6*Ce],[o,12,12*Ce],[r,1,Se],[r,2,2*Se],[e,1,Ee],[n,1,Oe],[n,3,3*Oe],[t,1,De]];function b(i){return(a(i)<i?_:u(i)<i?p:o(i)<i?d:r(i)<i?g:n(i)<i?e(i)<i?v:m:t(i)<i?x:w)(i)}function T(n,e,r,o){if(null==n&&(n=10),"number"==typeof n){var u=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(M,u);a===M.length?(o=y(e/De,r/De,n),n=t):a?(o=(a=M[u/M[a-1][2]<M[a][2]/u?a-1:a])[1],n=a[0]):(o=Math.max(y(e,r,n),1),n=c)}return null==o?n:n.every(o)}return l.invert=function(t){return new Date(h(t))},l.domain=function(t){return arguments.length?f(k.call(t,Ue)):f().map(Pe)},l.ticks=function(t,n){var e,r=f(),i=r[0],o=r[r.length-1],u=o<i;return u&&(e=i,i=o,o=e),e=(e=T(t,i,o,n))?e.range(i,o+1):[],u?e.reverse():e},l.tickFormat=function(t,n){return null==n?b:s(n)},l.nice=function(t,n){var e=f();return(t=T(t,e[0],e[e.length-1],n))?f(rt(e,t)):l},l.copy=function(){return q(l,je(t,n,e,r,o,u,a,c,s))},l}var Fe=function(){return je(Ht,Rt,Pt,Ot,St,At,kt,wt,_n).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},Ie=function(){return je(cn,un,Jt,Qt,Vt,Xt,kt,wt,pn).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])};function qe(t){var n=0,e=1,r=!1;function i(i){var o=(i-n)/(e-n);return t(r?Math.max(0,Math.min(1,o)):o)}return i.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.clamp=function(t){return arguments.length?(r=!!t,i):r},i.interpolator=function(n){return arguments.length?(t=n,i):t},i.copy=function(){return qe(t).domain([n,e]).clamp(r)},tt(i)}e.d(n,"scaleBand",function(){return S}),e.d(n,"scalePoint",function(){return E}),e.d(n,"scaleIdentity",function(){return et}),e.d(n,"scaleLinear",function(){return nt}),e.d(n,"scaleLog",function(){return lt}),e.d(n,"scaleOrdinal",function(){return C}),e.d(n,"scaleImplicit",function(){return A}),e.d(n,"scalePow",function(){return ft}),e.d(n,"scaleSqrt",function(){return _t}),e.d(n,"scaleQuantile",function(){return pt}),e.d(n,"scaleQuantize",function(){return dt}),e.d(n,"scaleThreshold",function(){return yt}),e.d(n,"scaleTime",function(){return Fe}),e.d(n,"scaleUtc",function(){return Ie}),e.d(n,"scaleSequential",function(){return qe})},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(8),i=e(13),o=e(11),u=e(10),a=function(){return function(){}}();n.Data=a;try{var c=r.csvParse(o.default).map(function(t){return{x:+t[1],y:+t[2]}});i.default(c),u.default(c)}catch(t){console.log(t)}},function(t,n,e){"use strict";e.r(n);var r={},i={},o=34,u=10,a=13;function c(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var s=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function s(t,n){var c,s=[],l=t.length,h=0,f=0,_=l<=0,p=!1;function d(){if(_)return i;if(p)return p=!1,r;var n,c,s=h;if(t.charCodeAt(s)===o){for(;h++<l&&t.charCodeAt(h)!==o||t.charCodeAt(++h)===o;);return(n=h)>=l?_=!0:(c=t.charCodeAt(h++))===u?p=!0:c===a&&(p=!0,t.charCodeAt(h)===u&&++h),t.slice(s+1,n-1).replace(/""/g,'"')}for(;h<l;){if((c=t.charCodeAt(n=h++))===u)p=!0;else if(c===a)p=!0,t.charCodeAt(h)===u&&++h;else if(c!==e)continue;return t.slice(s,n)}return _=!0,t.slice(s,l)}for(t.charCodeAt(l-1)===u&&--l,t.charCodeAt(l-1)===a&&--l;(c=d())!==i;){for(var y=[];c!==r&&c!==i;)y.push(c),c=d();n&&null==(y=n(y,f++))||s.push(y)}return s}function l(n){return n.map(h).join(t)}function h(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,r,i=s(t,function(t,i){if(e)return e(t,i-1);r=t,e=n?function(t,n){var e=c(t);return function(r,i){return n(e(r),i,t)}}(t,n):c(t)});return i.columns=r||[],i},parseRows:s,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(h).join(t)].concat(n.map(function(n){return e.map(function(t){return h(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(l).join("\n")}}},l=s(","),h=l.parse,f=l.parseRows,_=l.format,p=l.formatRows,d=s("\t"),y=d.parse,g=d.parseRows,v=d.format,m=d.formatRows;e.d(n,"dsvFormat",function(){return s}),e.d(n,"csvParse",function(){return h}),e.d(n,"csvParseRows",function(){return f}),e.d(n,"csvFormat",function(){return _}),e.d(n,"csvFormatRows",function(){return p}),e.d(n,"tsvParse",function(){return y}),e.d(n,"tsvParseRows",function(){return g}),e.d(n,"tsvFormat",function(){return v}),e.d(n,"tsvFormatRows",function(){return m})},function(t,n,e){"use strict";e.r(n);var r=Math.PI,i=2*r,o=i-1e-6;function u(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function a(){return new u}u.prototype=a.prototype={constructor:u,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(t,n,e,i,o){t=+t,n=+n,e=+e,i=+i,o=+o;var u=this._x1,a=this._y1,c=e-t,s=i-n,l=u-t,h=a-n,f=l*l+h*h;if(o<0)throw new Error("negative radius: "+o);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(f>1e-6)if(Math.abs(h*c-s*l)>1e-6&&o){var _=e-u,p=i-a,d=c*c+s*s,y=_*_+p*p,g=Math.sqrt(d),v=Math.sqrt(f),m=o*Math.tan((r-Math.acos((d+f-y)/(2*g*v)))/2),x=m/v,w=m/g;Math.abs(x-1)>1e-6&&(this._+="L"+(t+x*l)+","+(n+x*h)),this._+="A"+o+","+o+",0,0,"+ +(h*_>l*p)+","+(this._x1=t+w*c)+","+(this._y1=n+w*s)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,u,a,c){t=+t,n=+n;var s=(e=+e)*Math.cos(u),l=e*Math.sin(u),h=t+s,f=n+l,_=1^c,p=c?u-a:a-u;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+h+","+f:(Math.abs(this._x1-h)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+h+","+f),e&&(p<0&&(p=p%i+i),p>o?this._+="A"+e+","+e+",0,1,"+_+","+(t-s)+","+(n-l)+"A"+e+","+e+",0,1,"+_+","+(this._x1=h)+","+(this._y1=f):p>1e-6&&(this._+="A"+e+","+e+",0,"+ +(p>=r)+","+_+","+(this._x1=t+e*Math.cos(a))+","+(this._y1=n+e*Math.sin(a))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var c=a,s=function(t){return function(){return t}},l=Math.abs,h=Math.atan2,f=Math.cos,_=Math.max,p=Math.min,d=Math.sin,y=Math.sqrt,g=1e-12,v=Math.PI,m=v/2,x=2*v;function w(t){return t>=1?m:t<=-1?-m:Math.asin(t)}function M(t){return t.innerRadius}function b(t){return t.outerRadius}function T(t){return t.startAngle}function k(t){return t.endAngle}function N(t){return t&&t.padAngle}function A(t,n,e,r,i,o,u){var a=t-e,c=n-r,s=(u?o:-o)/y(a*a+c*c),l=s*c,h=-s*a,f=t+l,p=n+h,d=e+l,g=r+h,v=(f+d)/2,m=(p+g)/2,x=d-f,w=g-p,M=x*x+w*w,b=i-o,T=f*g-d*p,k=(w<0?-1:1)*y(_(0,b*b*M-T*T)),N=(T*w-x*k)/M,A=(-T*x-w*k)/M,C=(T*w+x*k)/M,S=(-T*x+w*k)/M,E=N-v,O=A-m,D=C-v,P=S-m;return E*E+O*O>D*D+P*P&&(N=C,A=S),{cx:N,cy:A,x01:-l,y01:-h,x11:N*(i/b-1),y11:A*(i/b-1)}}var C=function(){var t=M,n=b,e=s(0),r=null,i=T,o=k,u=N,a=null;function _(){var s,_,M,b=+t.apply(this,arguments),T=+n.apply(this,arguments),k=i.apply(this,arguments)-m,N=o.apply(this,arguments)-m,C=l(N-k),S=N>k;if(a||(a=s=c()),T<b&&(_=T,T=b,b=_),T>g)if(C>x-g)a.moveTo(T*f(k),T*d(k)),a.arc(0,0,T,k,N,!S),b>g&&(a.moveTo(b*f(N),b*d(N)),a.arc(0,0,b,N,k,S));else{var E,O,D=k,P=N,U=k,j=N,F=C,I=C,q=u.apply(this,arguments)/2,Y=q>g&&(r?+r.apply(this,arguments):y(b*b+T*T)),L=p(l(T-b)/2,+e.apply(this,arguments)),R=L,z=L;if(Y>g){var H=w(Y/b*d(q)),B=w(Y/T*d(q));(F-=2*H)>g?(U+=H*=S?1:-1,j-=H):(F=0,U=j=(k+N)/2),(I-=2*B)>g?(D+=B*=S?1:-1,P-=B):(I=0,D=P=(k+N)/2)}var X=T*f(D),$=T*d(D),V=b*f(j),Z=b*d(j);if(L>g){var Q=T*f(P),W=T*d(P),J=b*f(U),G=b*d(U);if(C<v){var K=F>g?function(t,n,e,r,i,o,u,a){var c=e-t,s=r-n,l=u-i,h=a-o,f=(l*(n-o)-h*(t-i))/(h*c-l*s);return[t+f*c,n+f*s]}(X,$,J,G,Q,W,V,Z):[V,Z],tt=X-K[0],nt=$-K[1],et=Q-K[0],rt=W-K[1],it=1/d(((M=(tt*et+nt*rt)/(y(tt*tt+nt*nt)*y(et*et+rt*rt)))>1?0:M<-1?v:Math.acos(M))/2),ot=y(K[0]*K[0]+K[1]*K[1]);R=p(L,(b-ot)/(it-1)),z=p(L,(T-ot)/(it+1))}}I>g?z>g?(E=A(J,G,X,$,T,z,S),O=A(Q,W,V,Z,T,z,S),a.moveTo(E.cx+E.x01,E.cy+E.y01),z<L?a.arc(E.cx,E.cy,z,h(E.y01,E.x01),h(O.y01,O.x01),!S):(a.arc(E.cx,E.cy,z,h(E.y01,E.x01),h(E.y11,E.x11),!S),a.arc(0,0,T,h(E.cy+E.y11,E.cx+E.x11),h(O.cy+O.y11,O.cx+O.x11),!S),a.arc(O.cx,O.cy,z,h(O.y11,O.x11),h(O.y01,O.x01),!S))):(a.moveTo(X,$),a.arc(0,0,T,D,P,!S)):a.moveTo(X,$),b>g&&F>g?R>g?(E=A(V,Z,Q,W,b,-R,S),O=A(X,$,J,G,b,-R,S),a.lineTo(E.cx+E.x01,E.cy+E.y01),R<L?a.arc(E.cx,E.cy,R,h(E.y01,E.x01),h(O.y01,O.x01),!S):(a.arc(E.cx,E.cy,R,h(E.y01,E.x01),h(E.y11,E.x11),!S),a.arc(0,0,b,h(E.cy+E.y11,E.cx+E.x11),h(O.cy+O.y11,O.cx+O.x11),S),a.arc(O.cx,O.cy,R,h(O.y11,O.x11),h(O.y01,O.x01),!S))):a.arc(0,0,b,j,U,S):a.lineTo(V,Z)}else a.moveTo(0,0);if(a.closePath(),s)return a=null,s+""||null}return _.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-v/2;return[f(r)*e,d(r)*e]},_.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:s(+n),_):t},_.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:s(+t),_):n},_.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:s(+t),_):e},_.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:s(+t),_):r},_.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:s(+t),_):i},_.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:s(+t),_):o},_.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:s(+t),_):u},_.context=function(t){return arguments.length?(a=null==t?null:t,_):a},_};function S(t){this._context=t}S.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var E=function(t){return new S(t)};function O(t){return t[0]}function D(t){return t[1]}var P=function(){var t=O,n=D,e=s(!0),r=null,i=E,o=null;function u(u){var a,s,l,h=u.length,f=!1;for(null==r&&(o=i(l=c())),a=0;a<=h;++a)!(a<h&&e(s=u[a],a,u))===f&&((f=!f)?o.lineStart():o.lineEnd()),f&&o.point(+t(s,a,u),+n(s,a,u));if(l)return o=null,l+""||null}return u.x=function(n){return arguments.length?(t="function"==typeof n?n:s(+n),u):t},u.y=function(t){return arguments.length?(n="function"==typeof t?t:s(+t),u):n},u.defined=function(t){return arguments.length?(e="function"==typeof t?t:s(!!t),u):e},u.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),u):i},u.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),u):r},u},U=function(){var t=O,n=null,e=s(0),r=D,i=s(!0),o=null,u=E,a=null;function l(s){var l,h,f,_,p,d=s.length,y=!1,g=new Array(d),v=new Array(d);for(null==o&&(a=u(p=c())),l=0;l<=d;++l){if(!(l<d&&i(_=s[l],l,s))===y)if(y=!y)h=l,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),f=l-1;f>=h;--f)a.point(g[f],v[f]);a.lineEnd(),a.areaEnd()}y&&(g[l]=+t(_,l,s),v[l]=+e(_,l,s),a.point(n?+n(_,l,s):g[l],r?+r(_,l,s):v[l]))}if(p)return a=null,p+""||null}function h(){return P().defined(i).curve(u).context(o)}return l.x=function(e){return arguments.length?(t="function"==typeof e?e:s(+e),n=null,l):t},l.x0=function(n){return arguments.length?(t="function"==typeof n?n:s(+n),l):t},l.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:s(+t),l):n},l.y=function(t){return arguments.length?(e="function"==typeof t?t:s(+t),r=null,l):e},l.y0=function(t){return arguments.length?(e="function"==typeof t?t:s(+t),l):e},l.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:s(+t),l):r},l.lineX0=l.lineY0=function(){return h().x(t).y(e)},l.lineY1=function(){return h().x(t).y(r)},l.lineX1=function(){return h().x(n).y(e)},l.defined=function(t){return arguments.length?(i="function"==typeof t?t:s(!!t),l):i},l.curve=function(t){return arguments.length?(u=t,null!=o&&(a=u(o)),l):u},l.context=function(t){return arguments.length?(null==t?o=a=null:a=u(o=t),l):o},l},j=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},F=function(t){return t},I=function(){var t=F,n=j,e=null,r=s(0),i=s(x),o=s(0);function u(u){var a,c,s,l,h,f=u.length,_=0,p=new Array(f),d=new Array(f),y=+r.apply(this,arguments),g=Math.min(x,Math.max(-x,i.apply(this,arguments)-y)),v=Math.min(Math.abs(g)/f,o.apply(this,arguments)),m=v*(g<0?-1:1);for(a=0;a<f;++a)(h=d[p[a]=a]=+t(u[a],a,u))>0&&(_+=h);for(null!=n?p.sort(function(t,e){return n(d[t],d[e])}):null!=e&&p.sort(function(t,n){return e(u[t],u[n])}),a=0,s=_?(g-f*m)/_:0;a<f;++a,y=l)c=p[a],l=y+((h=d[c])>0?h*s:0)+m,d[c]={data:u[c],index:a,value:h,startAngle:y,endAngle:l,padAngle:v};return d}return u.value=function(n){return arguments.length?(t="function"==typeof n?n:s(+n),u):t},u.sortValues=function(t){return arguments.length?(n=t,e=null,u):n},u.sort=function(t){return arguments.length?(e=t,n=null,u):e},u.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:s(+t),u):r},u.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:s(+t),u):i},u.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:s(+t),u):o},u},q=L(E);function Y(t){this._curve=t}function L(t){function n(n){return new Y(t(n))}return n._curve=t,n}function R(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(L(t)):n()._curve},t}Y.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var z=function(){return R(P().curve(q))},H=function(){var t=U().curve(q),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return R(e())},delete t.lineX0,t.lineEndAngle=function(){return R(r())},delete t.lineX1,t.lineInnerRadius=function(){return R(i())},delete t.lineY0,t.lineOuterRadius=function(){return R(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(L(t)):n()._curve},t},B=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},X=Array.prototype.slice;function $(t){return t.source}function V(t){return t.target}function Z(t){var n=$,e=V,r=O,i=D,o=null;function u(){var u,a=X.call(arguments),s=n.apply(this,a),l=e.apply(this,a);if(o||(o=u=c()),t(o,+r.apply(this,(a[0]=s,a)),+i.apply(this,a),+r.apply(this,(a[0]=l,a)),+i.apply(this,a)),u)return o=null,u+""||null}return u.source=function(t){return arguments.length?(n=t,u):n},u.target=function(t){return arguments.length?(e=t,u):e},u.x=function(t){return arguments.length?(r="function"==typeof t?t:s(+t),u):r},u.y=function(t){return arguments.length?(i="function"==typeof t?t:s(+t),u):i},u.context=function(t){return arguments.length?(o=null==t?null:t,u):o},u}function Q(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function W(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function J(t,n,e,r,i){var o=B(n,e),u=B(n,e=(e+i)/2),a=B(r,e),c=B(r,i);t.moveTo(o[0],o[1]),t.bezierCurveTo(u[0],u[1],a[0],a[1],c[0],c[1])}function G(){return Z(Q)}function K(){return Z(W)}function tt(){var t=Z(J);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var nt={draw:function(t,n){var e=Math.sqrt(n/v);t.moveTo(e,0),t.arc(0,0,e,0,x)}},et={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},rt=Math.sqrt(1/3),it=2*rt,ot={draw:function(t,n){var e=Math.sqrt(n/it),r=e*rt;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},ut=Math.sin(v/10)/Math.sin(7*v/10),at=Math.sin(x/10)*ut,ct=-Math.cos(x/10)*ut,st={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=at*e,i=ct*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var u=x*o/5,a=Math.cos(u),c=Math.sin(u);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},lt={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},ht=Math.sqrt(3),ft={draw:function(t,n){var e=-Math.sqrt(n/(3*ht));t.moveTo(0,2*e),t.lineTo(-ht*e,-e),t.lineTo(ht*e,-e),t.closePath()}},_t=Math.sqrt(3)/2,pt=1/Math.sqrt(12),dt=3*(pt/2+1),yt={draw:function(t,n){var e=Math.sqrt(n/dt),r=e/2,i=e*pt,o=r,u=e*pt+e,a=-o,c=u;t.moveTo(r,i),t.lineTo(o,u),t.lineTo(a,c),t.lineTo(-.5*r-_t*i,_t*r+-.5*i),t.lineTo(-.5*o-_t*u,_t*o+-.5*u),t.lineTo(-.5*a-_t*c,_t*a+-.5*c),t.lineTo(-.5*r+_t*i,-.5*i-_t*r),t.lineTo(-.5*o+_t*u,-.5*u-_t*o),t.lineTo(-.5*a+_t*c,-.5*c-_t*a),t.closePath()}},gt=[nt,et,ot,lt,st,ft,yt],vt=function(){var t=s(nt),n=s(64),e=null;function r(){var r;if(e||(e=r=c()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:s(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:s(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},mt=function(){};function xt(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function wt(t){this._context=t}wt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:xt(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:xt(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Mt=function(t){return new wt(t)};function bt(t){this._context=t}bt.prototype={areaStart:mt,areaEnd:mt,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:xt(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Tt=function(t){return new bt(t)};function kt(t){this._context=t}kt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:xt(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Nt=function(t){return new kt(t)};function At(t,n){this._basis=new wt(t),this._beta=n}At.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],u=t[e]-i,a=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*u),this._beta*n[c]+(1-this._beta)*(o+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Ct=function t(n){function e(t){return 1===n?new wt(t):new At(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function St(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Et(t,n){this._context=t,this._k=(1-n)/6}Et.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:St(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:St(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Ot=function t(n){function e(t){return new Et(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Dt(t,n){this._context=t,this._k=(1-n)/6}Dt.prototype={areaStart:mt,areaEnd:mt,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:St(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Pt=function t(n){function e(t){return new Dt(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Ut(t,n){this._context=t,this._k=(1-n)/6}Ut.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:St(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var jt=function t(n){function e(t){return new Ut(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Ft(t,n,e){var r=t._x1,i=t._y1,o=t._x2,u=t._y2;if(t._l01_a>g){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>g){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,l=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*s+t._x1*t._l23_2a-n*t._l12_2a)/l,u=(u*s+t._y1*t._l23_2a-e*t._l12_2a)/l}t._context.bezierCurveTo(r,i,o,u,t._x2,t._y2)}function It(t,n){this._context=t,this._alpha=n}It.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Ft(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var qt=function t(n){function e(t){return n?new It(t,n):new Et(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Yt(t,n){this._context=t,this._alpha=n}Yt.prototype={areaStart:mt,areaEnd:mt,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Ft(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Lt=function t(n){function e(t){return n?new Yt(t,n):new Dt(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Rt(t,n){this._context=t,this._alpha=n}Rt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Ft(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var zt=function t(n){function e(t){return n?new Rt(t,n):new Ut(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Ht(t){this._context=t}Ht.prototype={areaStart:mt,areaEnd:mt,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var Bt=function(t){return new Ht(t)};function Xt(t){return t<0?-1:1}function $t(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),u=(e-t._y1)/(i||r<0&&-0),a=(o*i+u*r)/(r+i);return(Xt(o)+Xt(u))*Math.min(Math.abs(o),Math.abs(u),.5*Math.abs(a))||0}function Vt(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function Zt(t,n,e){var r=t._x0,i=t._y0,o=t._x1,u=t._y1,a=(o-r)/3;t._context.bezierCurveTo(r+a,i+a*n,o-a,u-a*e,o,u)}function Qt(t){this._context=t}function Wt(t){this._context=new Jt(t)}function Jt(t){this._context=t}function Gt(t){return new Qt(t)}function Kt(t){return new Wt(t)}function tn(t){this._context=t}function nn(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),u=new Array(r);for(i[0]=0,o[0]=2,u[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,u[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,u[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,u[n]-=e*u[n-1];for(i[r-1]=u[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(u[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}Qt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Zt(this,this._t0,Vt(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,Zt(this,Vt(this,e=$t(this,t,n)),e);break;default:Zt(this,this._t0,e=$t(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Wt.prototype=Object.create(Qt.prototype)).point=function(t,n){Qt.prototype.point.call(this,n,t)},Jt.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},tn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=nn(t),i=nn(n),o=0,u=1;u<e;++o,++u)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var en=function(t){return new tn(t)};function rn(t,n){this._context=t,this._t=n}rn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var on=function(t){return new rn(t,.5)};function un(t){return new rn(t,0)}function an(t){return new rn(t,1)}var cn=function(t,n){if((i=t.length)>1)for(var e,r,i,o=1,u=t[n[0]],a=u.length;o<i;++o)for(r=u,u=t[n[o]],e=0;e<a;++e)u[e][1]+=u[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},sn=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function ln(t,n){return t[n]}var hn=function(){var t=s([]),n=sn,e=cn,r=ln;function i(i){var o,u,a=t.apply(this,arguments),c=i.length,s=a.length,l=new Array(s);for(o=0;o<s;++o){for(var h,f=a[o],_=l[o]=new Array(c),p=0;p<c;++p)_[p]=h=[0,+r(i[p],f,p,i)],h.data=i[p];_.key=f}for(o=0,u=n(l);o<s;++o)l[u[o]].index=o;return e(l,u),l}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:s(X.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:s(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?sn:"function"==typeof t?t:s(X.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?cn:t,i):e},i},fn=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,u=t[0].length;o<u;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}cn(t,n)}},_n=function(t,n){if((a=t.length)>1)for(var e,r,i,o,u,a,c=0,s=t[n[0]].length;c<s;++c)for(o=u=0,e=0;e<a;++e)(i=(r=t[n[e]][c])[1]-r[0])>=0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=u,r[0]=u+=i):r[0]=o},pn=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var u=0,a=0;u<e;++u)a+=t[u][r][1]||0;i[r][1]+=i[r][0]=-a/2}cn(t,n)}},dn=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,u=1;u<r;++u){for(var a=0,c=0,s=0;a<i;++a){for(var l=t[n[a]],h=l[u][1]||0,f=(h-(l[u-1][1]||0))/2,_=0;_<a;++_){var p=t[n[_]];f+=(p[u][1]||0)-(p[u-1][1]||0)}c+=h,s+=f*h}e[u-1][1]+=e[u-1][0]=o,c&&(o-=s/c)}e[u-1][1]+=e[u-1][0]=o,cn(t,n)}},yn=function(t){var n=t.map(gn);return sn(t).sort(function(t,e){return n[t]-n[e]})};function gn(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var vn=function(t){return yn(t).reverse()},mn=function(t){var n,e,r=t.length,i=t.map(gn),o=sn(t).sort(function(t,n){return i[n]-i[t]}),u=0,a=0,c=[],s=[];for(n=0;n<r;++n)e=o[n],u<a?(u+=i[e],c.push(e)):(a+=i[e],s.push(e));return s.reverse().concat(c)},xn=function(t){return sn(t).reverse()};e.d(n,"arc",function(){return C}),e.d(n,"area",function(){return U}),e.d(n,"line",function(){return P}),e.d(n,"pie",function(){return I}),e.d(n,"areaRadial",function(){return H}),e.d(n,"radialArea",function(){return H}),e.d(n,"lineRadial",function(){return z}),e.d(n,"radialLine",function(){return z}),e.d(n,"pointRadial",function(){return B}),e.d(n,"linkHorizontal",function(){return G}),e.d(n,"linkVertical",function(){return K}),e.d(n,"linkRadial",function(){return tt}),e.d(n,"symbol",function(){return vt}),e.d(n,"symbols",function(){return gt}),e.d(n,"symbolCircle",function(){return nt}),e.d(n,"symbolCross",function(){return et}),e.d(n,"symbolDiamond",function(){return ot}),e.d(n,"symbolSquare",function(){return lt}),e.d(n,"symbolStar",function(){return st}),e.d(n,"symbolTriangle",function(){return ft}),e.d(n,"symbolWye",function(){return yt}),e.d(n,"curveBasisClosed",function(){return Tt}),e.d(n,"curveBasisOpen",function(){return Nt}),e.d(n,"curveBasis",function(){return Mt}),e.d(n,"curveBundle",function(){return Ct}),e.d(n,"curveCardinalClosed",function(){return Pt}),e.d(n,"curveCardinalOpen",function(){return jt}),e.d(n,"curveCardinal",function(){return Ot}),e.d(n,"curveCatmullRomClosed",function(){return Lt}),e.d(n,"curveCatmullRomOpen",function(){return zt}),e.d(n,"curveCatmullRom",function(){return qt}),e.d(n,"curveLinearClosed",function(){return Bt}),e.d(n,"curveLinear",function(){return E}),e.d(n,"curveMonotoneX",function(){return Gt}),e.d(n,"curveMonotoneY",function(){return Kt}),e.d(n,"curveNatural",function(){return en}),e.d(n,"curveStep",function(){return on}),e.d(n,"curveStepAfter",function(){return an}),e.d(n,"curveStepBefore",function(){return un}),e.d(n,"stack",function(){return hn}),e.d(n,"stackOffsetExpand",function(){return fn}),e.d(n,"stackOffsetDiverging",function(){return _n}),e.d(n,"stackOffsetNone",function(){return cn}),e.d(n,"stackOffsetSilhouette",function(){return pn}),e.d(n,"stackOffsetWiggle",function(){return dn}),e.d(n,"stackOrderAscending",function(){return yn}),e.d(n,"stackOrderDescending",function(){return vn}),e.d(n,"stackOrderInsideOut",function(){return mn}),e.d(n,"stackOrderNone",function(){return sn}),e.d(n,"stackOrderReverse",function(){return xn})},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(0),i=e(6),o=e(3),u=e(4),a=e(5);n.default=function(t){var n=20,e=20,c=30,s=50,l=1280-s-e,h=720-n-c,f=0,_=t.map(function(t){return f+=t.y,{x:t.x,y:f}}),p=i.scaleLinear().domain([0,Math.max.apply(Math,_.map(function(t){return t.x}))+5]).range([0,l]),d=i.scaleLinear().domain([0,Math.max.apply(Math,_.map(function(t){return t.y}))+1]).range([h,0]),y=r.select("#Cocas").append("svg").attr("width",l+s+e).attr("height",h+n+c).append("g").attr("transform","translate("+s+", "+n+")");_.forEach(function(t,n){!function(t,n,e,r,i){a.transition().ease(o.easeElasticOut).duration(800).delay(3*i+100).attr("cy",r(n.y));t.append("circle").attr("cx",e(n.x)).attr("cy",r(0)).attr("r",5).attr("fill","red").transition().ease(o.easeElasticOut).duration(800).delay(3*i+100).attr("cy",r(n.y))}(y,t,p,d,n)}),y.append("g").attr("transform","translate(0, "+h+")").call(u.axisBottom(p)).transition().ease(o.easeElasticOut).duration(2e3).delay(100).attr("font-size",15),y.append("g").call(u.axisLeft(d)).transition().ease(o.easeElasticOut).duration(2e3).delay(100).attr("font-size",15)}},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default="1,2\n2,2\n3,2\n4,3\n5,2\n6,2\n7,3\n8,2\n9,2\n10,2\n11,3\n12,0\n13,1\n14,1\n15,3\n16,3\n17,2\n18,3\n19,3\n20,2\n21,0\n22,3\n23,3\n24,3\n25,2\n26,2\n27,0\n28,1\n29,3\n30,3\n31,2\n32,3\n33,3\n34,1\n35,1\n36,2\n37,3\n38,2\n39,3\n40,3\n41,2\n42,2\n43,3\n44,2\n45,3\n46,2\n47,3\n48,3\n49,3\n50,2\n51,3\n52,2\n53,3\n54,2\n55,3\n56,3\n57,3\n58,3\n59,1\n60,2\n61,2\n62,3\n63,2\n64,3\n65,3\n66,1\n67,0\n68,2\n69,3\n70,3\n71,3\n72,3\n73,2\n74,2\n75,2\n76,3\n77,2\n78,3\n79,3\n80,2\n81,3\n82,2\n83,2\n84,3\n85,2\n86,3\n87,2\n88,2\n89,3\n90,2\n91,2\n92,3\n93,2\n94,3\n95,2\n96,3\n97,2\n98,3\n99,2\n100,3\n101,3\n102,3\n103,2\n104,2\n105,2\n106,3\n107,2\n108,3\n109,4\n110,3\n111,3\n112,3\n113,2\n114,2\n115,3\n116,3\n117,3\n118,3\n119,3"},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(t,n){var e=Math.min(100,Math.max(0,n))/100*(t.sort().length-1),r=e-Math.floor(e),i=Math.floor(e);return t[i]+(r>0?r*(t[i+1]-t[i]):0)}},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(7),i=e(0),o=e(6),u=e(3),a=e(9),c=e(4),s=e(5),l=e(12),h=20,f=20,_=30,p=50,d=1280-p-f,y=720-h-_;n.default=function(t){o.scaleBand().domain(t.map(function(t){return t.x.toString()})).range([0,d]).paddingOuter(.1).paddingInner(.1),o.scaleLinear().domain([0,Math.max.apply(Math,t.map(function(t){return t.x}))]).range([0,d]),o.scaleLinear().domain([0,Math.max.apply(Math,t.map(function(t){return t.y}))]).range([y,0]);i.select("#Cocas_par_jour").append("svg").attr("width",d+p+f).attr("height",y+h+_).append("g").attr("id","main_g").attr("transform","translate("+p+", "+h+")").append("g").attr("id","histo"),g(t),document.getElementById("Jour_label").onclick=function(){t.map(function(t){return t});g(t)},document.getElementById("Semaine_label").onclick=function(){for(var n=[],e=0;e<t.length;e+=7){var i=new r.Data;i.x=e/7,i.y=0;for(var o=e;o<t.length&&o<e+7;o+=1)i.y+=t[o].y;n.push(i)}g(n)}};var g=function(t){for(var n=0,e=0,r=0;r+1<10;r+=1)n+=t[r].y,e+=1;var u=t.map(function(r,i){return i+10<t.length&&(n+=t[i+10].y,e+=1),i>10&&(n-=t[i-10].y,e-=1),{x:r.x,y:n/e}}),s=t.map(function(n,e){return{x:n.x,y:l.default(t.slice(0,e+1).map(function(t){return t.y}),95)}}),h=t.map(function(n,e){return{x:n.x,y:l.default(t.slice(0,e+1).map(function(t){return t.y}),5)}}),f=o.scaleLinear().domain([0,Math.max.apply(Math,t.map(function(t){return t.x}))]).range([0,d]),_=o.scaleLinear().domain([0,Math.max.apply(Math,t.map(function(t){return t.y}))]).range([y,0]),p=i.select("#main_g"),g=a.line().x(function(t){return f(t.x)}).y(function(t){return _(t.y)});v(t),p.select("#percentile95").remove(),p.append("path").attr("id","percentile95").datum(s).attr("class","line").attr("fill","none").style("stroke","#f40000AA").attr("stroke-linejoin","round").attr("stroke-linecap","round").style("stroke-width",5).attr("d",g),p.select("#smoothedData").remove(),p.append("path").attr("id","smoothedData").datum(u).attr("class","line").attr("fill","none").style("stroke","#f40000FF").attr("stroke-linejoin","round").attr("stroke-linecap","round").style("stroke-width",5).attr("d",g),p.select("#percentile05").remove();p.append("path").attr("id","percentile05").datum(h).attr("class","line").attr("fill","none").style("stroke","#f4000055").attr("stroke-linejoin","round").attr("stroke-linecap","round").style("stroke-width",5).attr("d",g);p.select("#x-axis").remove(),p.append("g").attr("id","x-axis").attr("transform","translate(0,"+y+")").call(c.axisBottom(f)),p.select("#y-axis").remove(),p.append("g").attr("id","y-axis").attr("class","axisSteelBlue").call(c.axisLeft(_))},v=function(t){var n=o.scaleBand().domain(t.map(function(t){return t.x.toString()})).range([0,d]).paddingOuter(.1).paddingInner(.1),e=o.scaleLinear().domain([0,Math.max.apply(Math,t.map(function(t){return t.y}))]).range([y,0]),r=i.select("#main_g");r.select("#histo").remove(),r.append("g").attr("id","histo").selectAll("rect").data(t).enter().append("rect").attr("class","bar").style("stroke","none").style("fill","#aa6666").attr("x",function(t){return n(t.x.toString())}).attr("width",function(t){return n.bandwidth()}).attr("y",function(t){return e(0)}).attr("height",function(t){return 0}).each(function(t,n){var r=s.transition().duration(1e3+500*Math.random()).delay(500*Math.random()).ease(u.easeElasticOut);i.select(this).transition(r).attr("height",e(0)-e(t.y)).attr("y",e(t.y))})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,